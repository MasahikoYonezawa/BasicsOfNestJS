name: Auto Tag on Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main
      - develop

permissions:
  contents: write

concurrency:
  group: auto-tag-${{ github.event.pull_request.base.ref }}
  cancel-in-progress: false

jobs:
  create-tag:
    if: >
      github.event.pull_request.merged == true &&
      (github.event.pull_request.base.ref == 'main' || github.event.pull_request.base.ref == 'develop')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Determine tag prefix and date
        id: vars
        run: |
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          if [ "$BASE_BRANCH" = "main" ]; then
            PREFIX="v"
          else
            PREFIX="pre-v"
          fi
          DATE=$(TZ=Asia/Tokyo date +"%Y-%m-%d")
          echo "prefix=$PREFIX" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT

      - name: Compute next build number
        id: next
        run: |
          PREFIX="${{ steps.vars.outputs.prefix }}"
          DATE="${{ steps.vars.outputs.date }}"
          git fetch --tags --force
          CUR=001
          BASE="${PREFIX}${DATE}"
          # Start from .001 and increment until a free tag is found
          while git rev-parse -q --verify "refs/tags/${BASE}.${CUR}" >/dev/null; do
            NEXT=$((10#$CUR + 1))
            CUR=$(printf "%03d" "$NEXT")
          done
          TAG_NAME="${BASE}.${CUR}"
          echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Create and push tag
        env:
          TAG_NAME: ${{ steps.next.outputs.tag }}
        run: |
          COMMIT_SHA="${{ github.event.pull_request.merge_commit_sha }}"
          # Fallback to HEAD
          if [ -z "$COMMIT_SHA" ]; then
            COMMIT_SHA=$(git rev-parse HEAD)
          fi
          git tag "$TAG_NAME" "$COMMIT_SHA"
          git push origin "$TAG_NAME"

      - name: Output created tag
        run: echo "Created tag ${{ steps.next.outputs.tag }}"